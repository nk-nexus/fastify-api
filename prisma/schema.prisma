// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  id        Int        @id @default(autoincrement())
  name      String?    @db.VarChar(50)
  email     String     @unique @db.VarChar(255)
  password  String     @unique @db.VarChar(512)
  salt      String     @db.VarChar(119)
  role      UserRole   @default(CUSTOMER)
  phone     String?    @db.VarChar(20)
  address   String?    @db.Text()
  loginAt   DateTime?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  orders    Orders[]
}

model Orders {
  id         Int          @id @default(autoincrement())
  details    String?      @db.Text()
  status     OrderStatus  @default(INTERESTED)
  amount     Int
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  owner      Users        @relation(fields: [ownerId], references: [id])
  ownerId    Int
  orderItems OrderItems[]
  Payments   Payments[]
}

model OrderItems {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  order       Orders      @relation(fields: [orderId], references: [id])
  orderId     Int
  product     Products    @relation(fields: [productId], references: [id])
  productId   Int
  stockItem   StockItems? @relation(fields: [stockItemId], references: [id])
  stockItemId Int?        @unique
}

model Payments {
  id        Int           @id @default(autoincrement())
  amount    Decimal       @db.Decimal(10, 2)
  method    String        @db.VarChar(119)
  date      DateTime      @default(now())
  status    PaymentStatus
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  order     Orders        @relation(fields: [orderId], references: [id])
  orderId   Int
}

model Products {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(119)
  brand       String       @db.VarChar(119)
  vendor      String       @db.VarChar(119)
  type        ProductType
  price       Int
  tags        String       @db.Text()
  details     Json
  purchasable Boolean
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  stockItems  StockItems[]
  orderItems  OrderItems[]

  @@fulltext([tags])
}

model StockItems {
  id        Int         @id @default(autoincrement())
  code      String      @unique @db.VarChar(50)
  details   String?     @db.Text()
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  deletedAt DateTime?
  product   Products    @relation(fields: [productId], references: [id])
  productId Int
  orderItem OrderItems?
}

enum PaymentStatus {
  PENDING
  SUCCESSFUL
  FAILED
}

enum ProductType {
  CPU
  GPU
  RAM
  M2
  SSD
  HDD
  MOTHERBOARD
  POWER_SUPPLY
  MONITOR
  CASE
  UPS
}

enum OrderStatus {
  INTERESTED
  ORDERED
  PURCHASED
  COMPLETED
}

enum UserRole {
  CUSTOMER
  STAFF
  ADMIN
}
